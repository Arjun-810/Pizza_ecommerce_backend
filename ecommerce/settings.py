"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-hr+28##(!qapb24*#@r557h)s8#2@b6^z14ijrop84mq5m6!kn"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

AUTH_USER_MODEL = "products.User"

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True

SESSION_COOKIE_SAMESITE = "None"

SESSION_COOKIE_SECURE = True

SESSION_COOKIE_HTTPONLY = False

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "rest_framework",
    "products",
    "sslserver",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    # 'django.middleware.csrf.CsrfViewMiddleware',
    "ecommerce.utils.DisableCSRFMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "ecommerce.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "ecommerce.wsgi.application"


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Access-Control-Allow-Origin",
    "ngrok-skip-browser-warning",
]

OAUTH_REDIRECT_URL = "https://pizzafront.thecv.in/socialAuth/{provider}/"

AUTHLIB_OAUTH_CLIENTS = {
    "google": {
        "client_id": "11343376385-l6qeehuf5tp7s0t2a8ondg0aunrehqi8.apps.googleusercontent.com",
        "client_secret": "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",
        "client_kwargs": {"scope": "openid email profile"},
        "server_metadata_url": "https://accounts.google.com/.well-known/openid-configuration",
    },
    "facebook": {
        "client_id": "175916235489691",
        "client_secret": "615380b73d47448afff4b62c50426ab5",
        "client_kwargs": {"scope": "openid email"},
        "server_metadata_url": "https://www.facebook.com/.well-known/openid-configuration",
        # Need to implement these custom urls because openid-config doesn't include these urls.
        "api_base_url": "https://graph.facebook.com/v9.0/",
        "access_token_url": "https://graph.facebook.com/v9.0/oauth/access_token",
        "access_token_params": None,
        "authorize_url": "https://www.facebook.com/v9.0/dialog/oauth",
        "authorize_params": None,
        # Ref:
        # https://docs.authlib.org/en/latest/client/frameworks.html#parsing-id-token
        "jwks_uri": "https://www.facebook.com/.well-known/oauth/openid/jwks/",
    },
}
